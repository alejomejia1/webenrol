@{
    ViewData["Title"] = "Device Page";
}
@using AspStudio.Models;
@model IQueryable<Employee>
@* <ul class="breadcrumb">
        <li class="breadcrumb-item"><a href="#">HOME</a></li>
        <li class="breadcrumb-item active">REPORTES</li>
    </ul> *@

<link href="~/css/mvc-grid/mvc-grid.css" rel="stylesheet">
<link href="~/css/dropzone.min.css" rel="stylesheet">
<style>
    .table-title {
        padding-bottom: 15px;
        background: #299be4;
        color: #fff;
        padding: 16px 30px;
        border-radius: 5px;
    }

        .table-title h2 {
            margin: 5px 0 0;
            font-size: 24px;
        }

        .table-title .btn {
            color: #566787;
            float: right;
            font-size: 13px;
            background: #fff;
            border: none;
            min-width: 50px;
            border-radius: 2px;
            border: none;
            outline: none !important;
            margin-left: 10px;
        }

            .table-title .btn:hover, .table-title .btn:focus {
                color: #566787;
                background: #f2f2f2;
            }

            .table-title .btn i {
                float: left;
                font-size: 21px;
                margin-right: 5px;
            }

            .table-title .btn span {
                float: left;
                margin-top: 2px;
            }
</style>
<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>
<div class="row">
    <div class="col-md-6">
        <div id="dropzone">
            <form action="/Employee/Upload" class="dropzone needsclick dz-clickable" id="uploader">
                <div class="dz-message needsclick">
                    Suelte los archivos de imagenes aqui.<br>
                    Las imagenes deben estar en formato JPG, con tamaño de imagen minimo de 640x800, fondo blanco. <br>
                </div>
            </form>
        </div>
    </div>
    <div class="col-md-6">
        <form asp-controller="Home" asp-action="Export">
            <div class="container">
                <div class="row">  Actualización en lote de autorizaciones</div>
                <div class="row">
                    <div class="col-md-8">
                        <input type="file" id="fileupload" name="files" class="form-control" />
                    </div>
                    <div class="col-md-4">
                        <input type="button" name="Upload" value="Upload" id="btnupload" class="btn btn-primary" />
                        @* <a href="@Url.Action("Download", "Home")">Download</a> *@
                    </div>
                    @* <div class="col-md-5">
                        <input type="submit" name="Export" value="Create and Export" id="btnExport"
                            class="btn btn-primary" asp-action="Export" />
                    </div> *@
                </div>
                <div class="clearfix">&nbsp;</div>
                <div class="row">
                    <div id="divPrint"></div>
                </div>
            </div>
        </form>
        <select id="bind_device_id_select">
            <option value="" data-token=""> Seleccione </option>

            @foreach (dynamic device in ViewBag.Devices)
            {
                <option value="@device.dev_id">@device.tag</option>
            }
        </select> <div class="input-group-append"></div>
    </div>
</div>
<div class="clear"></div>

<div class="container-l" width="100%">
    <div class="table-title">
        <div class="row">
            <div class="col-md-6">
                <h2>Administración de Empleados y Contratistas</h2>
            </div>
            <div class="col-md-6">
                @* <a href="#" class="btn btn-secondary"><i class="material-icons" data-toggle="modal" data-target="#Add_user_modal">&#xE147;</i> <span>Add New User</span></a> *@
                <button id="sendSelected"  class="btn btn-secondary"><i class="fa fa-send"></i> <span>Enviar Seleccionados</span></button>
            </div>
        </div>
    </div>
    <div class="selAll" style = "margin:10px;">
        <input type="checkbox" id="checkAll"/> Seleccionar todos
    </div>
    @(Html
        .Grid(Model)
        .Build(columns =>
        {
            columns.Add(model => $"<input name='employee' type='checkbox' data-id='{model.Documento}' id='{model.Documento}'/>").Titled("Sel").Encoded(false);
            columns.Add(model => model.LastName).Titled("Apellido");
            columns.Add(model => model.FirstName).Titled("Nombre");
            columns.Add(model => model.Status).Titled("Status");
            columns.Add(model => model.StartTime).Titled("Desde").RenderedAs(model => model.StartTime == null ? null : model.StartTime).Formatted("{0: yyyy/MM/dd HH:mm:ss}");
            columns.Add(model => model.EndTime).Titled("Hasta").RenderedAs(model => model.EndTime == null ? null : model.EndTime).Formatted("{0: yyyy/MM/dd HH:mm:ss}");
            columns.Add(model => model.Documento).Titled("Documento");
            columns.Add(model => model.Empresa).Titled("Empresa");
            //.RenderedAs(model => model.IsWorking == true ? "Employed" : "Unemployed");
            //columns.Add(model => $"<img src='http://10.11.34.94:5050/Uploads/{model.imageUrl}' style='width:50px;height:50px' />").Titled("Foto").Encoded(false);
            columns.Add(model => model.imageUrl).Titled("Foto").RenderedAs(model => model.imageUrl != "" ? $"<img src='http://10.11.34.94:5050/Uploads/{model.imageUrl}' style='width:50px;height:50px' onerror='this.onerror=null;this.src=\"http://10.11.34.94:5050/Uploads/avatar.png\"';/>" : $"<img src='http://10.11.34.94:5050/Uploads/avatar.png' style='width:50px;height:50px' />" ).Encoded(false);
            columns.Add(Model =>
                $"<a href='#' class='settings' title='Settings' data-toggle='tooltip'><i class='fa fa-cog' data-toggle='modal' data-target='#Send_user_modal'></i>"
                + "<a href='#' class='send' title='Send' data-toggle='tooltip' data-id='{model.Documento}'><i class='fa fa-paper-plane' id='enviar'></i>"
                +  "<a href='#' class='delete' title='Delete' data-toggle='tooltip' data-id='{model.Documento}'><i class='fa fa-trash' id='delete'></i>"
            ).Encoded(false);
        })
        .Using(GridFilterMode.Header)
        .Empty("No se encontraron datos")
        .Filterable()
        .Sortable()
        .Pageable(pager =>
            {
                //pager.PageSizes = new DictionaryInt32, String> { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 50, "50" }, { 100, "100" }, { 200, "200" }, { 500, "500" } };
                pager.ShowPageSizes = true;
                pager.PagesToDisplay = 5;
                pager.CurrentPage = 1;
                pager.RowsPerPage = 100;
            }
        )
    )
</div>

@* //columns.Add(model => model.StartTime).Titled("Desde").RenderedAs(model => model.StartTime == null ? "- - -" : model.StartTime.ToString());
//columns.Add(model => model.EndTime).Titled("Hasta").RenderedAs(model => model.EndTime == null ? "- - -" : model.EndTime.ToString()); *@

@* columns.Add(model => $"<img src='{model.imageUrl}' style='width:50px;height:50px' />").Titled("Foto").Encoded(false); *@
@* columns.Add(Model => model.imageUrl).Titled("Image"); *@
@* columns.Add(model => model.IdLenel).Titled("Id Lenel"); *@
@* columns.Add(model => model.SSNO).Titled("SSNO"); *@

<!-- Modal 1 Adicionar usuario -->
<div class="modal fade" id="Add_user_modal" tabindex="-2" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Adicionar Usuario</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="padding:40px 40px;">
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">ID</span></div><input autocomplete="off" type="text" class="form-control" id="Id" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Puntaje similitud</span></div><input autocomplete="off" type="text" class="form-control" id="similar_score" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Nombre Usuario</span></div><input autocomplete="off" type="text" class="form-control" id="add_user_name" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Fecha de registro</span></div><input autocomplete="off" type="text" class="form-control" id="register_date" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Temperatura</span></div><input autocomplete="off" type="text" class="form-control" id="temperature" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Mascarilla</span></div><input autocomplete="off" type="text" class="form-control" id="mask" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">¿Extraño?</span></div><input autocomplete="off" type="text" class="form-control" id="matched" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">ID dispositivo</span></div><input autocomplete="off" type="text" class="form-control" id="dev_id" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">URL de fotografía</span></div><input autocomplete="off" type="text" class="form-control" id="photo" />
                    <div class="input-group-append"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="save_new_device">Save changes</button>
            </div>
        </div>
    </div>
</div>


<!-- Modal 2 Enviar usuario a la tableta-->
<div class="modal fade" id="Send_user_modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Enviar usuario a la tableta</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="padding:40px 40px;">
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Nombre del lote</span></div><input autocomplete="off" type="text" class="form-control" id="batch_name" default="Ecopetrol" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">ID del lote</span></div><input autocomplete="off" type="text" class="form-control" id="batch_id" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">IP del servidor</span></div><input autocomplete="off" type="text" class="form-control" id="server_ip" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Puerto del servidor</span></div><input autocomplete="off" type="text" class="form-control" id="server_port" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Fecha de ingreso</span></div><input autocomplete="off" type="text" class="form-control" id="active_time" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Fecha de Salida</span></div><input autocomplete="off" type="text" class="form-control" id="end_time" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">ID del usuario</span></div><input autocomplete="off" type="text" class="form-control" id="user_id" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Nombre del usuario</span></div><input autocomplete="off" type="text" class="form-control" id="user_firstname" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Apellido del usuario</span></div><input autocomplete="off" type="text" class="form-control" id="user_lastname" />
                    <div class="input-group-append"></div>
                </div>
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">URL de fotografía</span></div><input autocomplete="off" type="text" class="form-control" id="picture" />
                    <div class="input-group-append"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="save_new_device">Save changes</button>
            </div>
        </div>
    </div>
</div>
<script src="~/js/mvc-grid/mvc-grid.js"></script>
<script src="~/js/dropzone.min.js"></script>


<!-- Carga las librerias de MQTT js -->
<!--  <script src="~/js/mqtt.js"></script> -->

@* <script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/chat.js"></script> *@

<script>
    document.querySelectorAll(".mvc-grid").forEach(element => new MvcGrid(element));
</script>

<script>

    var server_ip = "10.11.34.94";
    var server_port = 5050;

    $('#bind_device_id_select').on('change', changeDevice);
    $('.settings').on('click', function(){
        row = $(this).closest('tr');
        console.log(row);
        console.log("Avión.");
        lastname = row.find("td:eq(1)").html();
        firstname = row.find("td:eq(2)").html();
        name =  firstname + " " + lastname;
        user_id = row.find("td:eq(6)").html();
        imageUrl = "/Uploads/" + user_id + '.jpg';
        console.log(imageUrl);
        start_time = row.find("td:eq(4)").html().trim();
        console.log("la fecha de inicio:");
        console.log(start_time);
        end_time = row.find("td:eq(5)").html().trim();
        $("#batch_name").val("Ecopetrol");
        $("#batch_id").val("1");
        $("#server_ip").val(server_ip);
        $("#server_port").val(server_port);
        $("#active_time").val(start_time);
        $("#end_time").val(end_time);
        $("#user_id").val(user_id);
        $("#user_firstname").val(firstname);
        $("#user_lastname").val(lastname);
        $("#picture").val(imageUrl);
    })

    $(".delete").on('click', function(){
        row = $(this).closest('tr');
        user_id = row.find("td:eq(6)").html();
        var r = confirm("Esta seguro de querer borar el registro?");
        if (r==true) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("DeleteUser", "Employee")',
                //dataType: "json",
                data:{
                    document: user_id,
                },
                async: false,
                success: function(data) {
                    if(data.success == true) {
                        // ToDo : Enviar mensaje por MQTT para borrar registro de todas las tabletas
                        location.reload();
                    } else {
                        alert("Registro no encontrado");
                    }
                    
                },
                error: function() {
                    console.log("Error borrando un registro");
                }
            });
        }
        
    })

    var row;
    var device_id;
    var device_tkn;
    var device_tag;

    $('.send').on('click', function () {
        if( device_id ==  null || device_tkn == null) {
            alert("Debe seleccionar un dispositivo de destino y este debe estar enlazado");
        } else {
            row = $(this).closest('tr');
            console.log(row);
            console.log("Avión.");
            name = row.find("td:eq(1)").html() + " " + row.find("td:eq(2)").html();
            user_id = row.find("td:eq(6)").html();
            imageUrl = "/Uploads/" + user_id + '.jpg';
            start_time = row.find("td:eq(4)").html().trim();
            end_time = row.find("td:eq(5)").html().trim();

            addsUser(name, user_id, imageUrl, start_time, end_time);
        }
        
    });


    // Se dispara cuando se selecciona una tableta de la lista desplegable
    function changeDevice() {
        device_id = $(this).val();
        console.log("Device_id : " + device_id);
        $.get("/Device/getDeviceToken?device_id=" + device_id, function (data) {
            device_tkn = data.token;
            device_tag = data.tag;
            console.log("Data : ")
            console.log(data);
            console.log("Dev Tkn : " + device_tkn);
            console.log("Device_tag : " + device_tag);
        });
    }
    


    $(document).ready(function () {
        Dropzone.options.uploader = {
            paramName: "file",
            maxFilesize: 2,
            init: function () {
                this.on("success", function (file) {
                    alert("Added file.");
                });
            },
            accept: function (file, done) {
                if (file.name == "test.jpg") {
                    alert("Can't upload a test file.");
                }
                else {
                    //Show a confirm alert and display the image on the page.
                    alert("Foto subida.");
                    location.reload();
                    console.log("Foto subida.");
                }
            }
        };
    });



     /* 	Add single or multiple user photo database information
    {
            "mqtt_cmd":1,
            "mqtt_operate_id":7,
            "device_token":"1514348271",
            "device_id":"7101389947744",
            "tag":"platfrom define",
            "piclib_manage":0,
            "param":
            {
                "lib_name":"Smart Park",
                "lib_id":"8",
                "server_ip":"172.18.195.61",
                "server_port":80,
                "pictures":
                [{
                    "active_time":"2020/01/1 00:00:01",
                    "user_id":"11",
                    "user_name":"Zhang San",
                    "end_time":"2020/12/30 23:59:59",
                    "p_id":"null",
                    "picture":"/192952.JPG"
                },
                {
                    "active_time":"2020/01/1 00:00:01",
                    "user_id":"22",
                    "user_name":"LI SI",
                    "end_time":"2020/12/30 23:59:59",
                    "p_id":"null",
                    "picture":"/linxiaofei.jpg"
                }]
            }
        }

    */

    function addsUser(name , user_id, imageUrl, start_time, end_time) {
        console.log("Se envian datos a la tableta.");
        console.log ("Start_Time: " + start_time);
        console.log ("End_Time: " + end_time);
        var batch_name = "Ecopetrol";
        var batch_id = "1";
        var address =  server_ip ;
        var port = server_port;
        var in_time = start_time;
        var out_time = end_time;
        var id_user = user_id;
        var name_user = name;
        var url = imageUrl;
        var dev_id = device_id;
        var dev_tag = device_tag;
        var dev_tkn = device_tkn;

        jsonMsg =
        {
            mqtt_cmd: 1,
            mqtt_operate_id: 7,
            device_token: dev_tkn,
            device_id:  dev_id,
            tag: dev_tag,
            piclib_manage: 0,
            param:
            {
                lib_name: batch_name,
                lib_id: batch_id,
                server_ip: address,
                server_port: port,
                pictures:
                [
                    {
                        active_time: in_time,
                        user_id: id_user,
                        user_name: name_user,
                        end_time: out_time,
                        p_id: null,
                        picture: url
                    }
                ]
            }
        };
        jsonMsg = JSON.stringify(jsonMsg);
        console.log(jsonMsg);
        $.ajax({
            type: "GET",
            url: '@Url.Action("publishMQTT", "Employee")',
            dataType: "json",
            data:{
                topic: "SubscribeTest",
                msg: jsonMsg
            },
            async: false,
            success: function(data) {
                if(data.success == true)
                {
                    console.log("Registro enviado");
                } else {
                    alert ("Fallo el envio del registro");
                }
                
            },
            error: function() {
                console.log("Error adding new user");
            }
        });
    }


    function sendUsers(json) {
        jsonMsg = JSON.stringify(json);
        console.log(jsonMsg);
        $.ajax({
            type: "GET",
            url: '@Url.Action("publishMQTT", "Employee")',
            dataType: "json",
            data:{
                topic: "SubscribeTest",
                msg: jsonMsg
            },
            async: false,
            success: function(data) {
                if(data.success == true)
                {
                    console.log("Registro enviado");
                } else {
                    alert ("Fallo el envio del registro");
                }
                
            },
            error: function() {
                console.log("Error adding new users");
            }
        });
    }
</script>


<script type="text/javascript">


    $(function () {
        $('#btnupload').on('click', function () {
            var fileExtension = ['xls', 'xlsx'];
            var filename = $('#fileupload').val();
            if (filename.length == 0) {
                alert("Seleccione un archivo.");
                return false;
            }
            else {
                var extension = filename.replace(/^.*\./, '');
                if ($.inArray(extension, fileExtension) == -1) {
                    alert("Solo se permite archivos de excel.");
                    return false;
                }
            }
            var fdata = new FormData();
            var fileUpload = $("#fileupload").get(0);
            var files = fileUpload.files;
            fdata.append(files[0].name, files[0]);
            $.ajax({
                type: "POST",
                url: "/Employee/Import",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                data: fdata,
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response.length == 0)
                        alert('Some error occured while uploading');
                    else {
                        console.log(response);
                        location.reload();
                    }
                },
                error: function (e) {
                    $('#divPrint').html(e.responseText);
                }
            });
        })
        $('#btnExport').on('click', function () {
            var fileExtension = ['xls', 'xlsx'];
            var filename = $('#fileupload').val();
            if (filename.length == 0) {
                alert("Please select a file then Import");
                return false;
            }
        });

        $('#checkAll').on("change", function(){
            console.log("Click en Select All")
            $('input:checkbox[name=employee]').not(this).prop('checked', this.checked);
        });

        $('#sendSelected').on('click', function(){
            console.log("Enviando seleccionados");
            if( device_id ==  null || device_tkn == null) {
                alert("Debe seleccionar un dispositivo de destino y este debe estar enlazado");
            } else {
                sendAll("7101396770022","2302879601", "SendImages", "Test", 1)
            }
        });
        
        function sendAll(device_id, device_tkn, device_tag, b_name, b_id) {

            
            console.log("Enviando Batch imagenes");

            var batch_name = b_name
            var batch_id = b_id;
            var address =  server_ip ;
            var port = server_port;
            var in_time ;
            var out_time ;
            var id_user;
            var name_user;
            var url ;

            var selectedIds = [];
            $("input:checkbox[name=employee]:checked").each(function(){
                selectedIds.push($(this).data("id"));
            });
            console.log(selectedIds);

            jsonMsg =
            {
                mqtt_cmd: 1,
                mqtt_operate_id: 7,
                device_token: device_tkn,
                device_id:  device_id,
                tag: device_tag,
                piclib_manage: 0,
                param:
                {
                    lib_name: batch_name,
                    lib_id: batch_id,
                    server_ip: address,
                    server_port: port,
                    pictures:[]
                }
            };

            $.each(selectedIds, function(i, v){
                //console.log(v);
                chkbox = document.getElementById(v);
                //console.log(chkbox);
                row = chkbox.closest('tr');
                lastname = row.getElementsByTagName("td")[1].textContent;
                firstname = row.getElementsByTagName("td")[2].textContent;

                name = lastname + " " + firstname;
                user_id = row.getElementsByTagName("td")[6].textContent;
                imageUrl = "/Uploads/" + user_id + '.jpg';
                start_time = row.getElementsByTagName("td")[4].textContent.trim();
                end_time = row.getElementsByTagName("td")[5].textContent.trim();

                console.log(row, name, user_id, imageUrl, start_time, end_time);
                
                newPic = {
                    active_time: start_time,
                    user_id: user_id,
                    user_name: name,
                    end_time: end_time,
                    p_id: null,
                    picture: imageUrl
                };

                jsonMsg.param.pictures.push(newPic);

                
                
            })

            sendUsers(jsonMsg);
            
            

            
        }

    });
</script>